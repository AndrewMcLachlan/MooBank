name: Deploy
on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'Version number'
        required: true
      project:
        type: string
        description: 'The name of the Octopus project'
        required: true
      package-name:
        type: string
        description: 'The name of the package'
        required: true
      space:
        type: string
        description: 'The Octopus Deploy space'
        default: Default
    secrets:
      OCTOPUSAPIKEY:
        description: 'Octopus API Key'
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v3
      with:
        version: latest
    - name: Restore cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/artifacts/${{ inputs.package-name }}.${{ inputs.version }}.zip
        key: ${{ runner.os }}-package-${{ inputs.version }}
    - name: Push packages
      uses: OctopusDeploy/push-package-action@v3
      with:
        api_key: ${{ secrets.OCTOPUSAPIKEY }}
        server: ${{ vars.OCTOPUSURL }}
        packages: " ${{ github.workspace }}/artifacts/${{ inputs.package-name }}.${{ inputs.version }}.zip"
        space: ${{ inputs.space }}
    - name: Create release
      uses: OctopusDeploy/create-release-action@v3
      with:
        api_key: ${{ secrets.OCTOPUSAPIKEY }}
        server: ${{ vars.OCTOPUSURL }}
        release_number: ${{ inputs.version }}
        package_version: ${{ inputs.version }}
        git_ref: ${{ (github.ref_type == 'tag' && github.event.repository.default_branch ) || (github.head_ref || github.ref) }}
        git_commit: ${{ github.event.after || github.event.pull_request.head.sha }}
        space: ${{ inputs.space }}
        project: ${{ inputs.project }}
        progress: false